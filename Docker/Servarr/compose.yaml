### Jacobs docker-compose file for Servarr containers with gluetun VPN ###
### Still a work in progress, use at your own risk. ###
### Make sure to create a .env file in the same directory as this compose file ###
### This setup works for me, but might not work for you. ###
### Lots of comments to help myself remember what I did. :) ###

# Network setup for gluetun and servarr containers
networks:
  servarrnetwork:
    name: servarrnetwork
    ipam:
      config:
        - subnet: 172.39.0.0/24
services:
  # ─── Gluetun ───────────────────────────────────────────
  # This is the VPN container, all other containers will use its network stack
  # Make sure to set the correct environment variables in the .env file
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY= ##PRIVATEKEY##
      - UPDATER_PERIOD=24h
      - SERVER_COUNTRIES=Sweden
      - SERVER_CITIES=Stockholm
      - FIREWALL_OUTBOUND_SUBNETS=172.39.0.0/24
    networks:
      servarrnetwork:
        ipv4_address: 172.39.0.2
    ports:
      - 8080:8080 # qbittorrent web interface
      - 6881:6881 # qbittorrent torrent port
      - 9696:9696 # prowlarr
      - 8191:8191   # flaresolverr
    volumes:
      - ./gluetun:/gluetun
    # Make sure that the .env file is in the same directory as this compose file.
    env_file:
      - .env
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 20s
      timeout: 10s
      retries: 5
    restart: unless-stopped

# ─── Qbittorrent -──────────────────────────────────────────────
# Our Download Client Container, using gluetun's network stack
# It is configured to disable all connections if the VPN goes down.
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    labels:
      - deunhealth.restart.on.unhealthy=true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080 # must match "qbittorrent web interface" port number in gluetun's service above
# This is where you map your download folders, make sure to change to /data/downloads or whatever you want.
    volumes:
      - ./qbittorrent:/config
      - /data:/data
# Depends on gluetun container to be healthy before starting!
    depends_on:
      gluetun:
        condition: service_healthy
        restart: true
    network_mode: service:gluetun
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 60s
      retries: 3
      start_period: 20s
      timeout: 10s

# ─── deunhealth -──────────────────────────────────────────────
# This container monitors the health of qbittorrent and restarts it if it becomes unhealthy
  deunhealth:
    image: qmcgaw/deunhealth
    container_name: deunhealth
    network_mode: "none"
    environment:
      - LOG_LEVEL=info
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - TZ=${TZ}
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

# ─── Prowlarr ──────────────────────────────────────────────
# Our indexer manager, using gluetun's network stack.
# It is configured to disable all connections if the VPN goes down.
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prowlarr:/config
    restart: unless-stopped
    depends_on:
      gluetun:
        condition: service_healthy
        restart: true
    network_mode: service:gluetun

# ─── Sonarr -──────────────────────────────────────────────
# Our TV show manager, using gluetun's network stack.
# It is configured to sort and organize TV shows after download.
# Make sure to add each directory under the volumes section.
# then add the same path in sonarr's settings under media management, root folders.
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./sonarr:/config
      - /data:/data # Disk 1
      - /mnt/0ef20329-547e-44d6-83bc-722e172aa890/shows1:/shows1 # Disk 2
    ports:
      - 8989:8989
    networks:
      servarrnetwork:
        ipv4_address: 172.39.0.3

# ─── Radarr -──────────────────────────────────────────────
# Our Movie manager, using gluetun's network stack.
# It is configured to sort and organize movies after download.
# Make sure to add each directory under the volumes section.
# then add the same path in sonarr's settings under media management, root folders.
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./radarr:/config
      - /data:/data # Disk 1
      - /mnt/0ef20329-547e-44d6-83bc-722e172aa890/movies1:/movies1 # Disk 2
    ports:
      - 7878:7878
    networks:
      servarrnetwork:
        ipv4_address: 172.39.0.4

# ─── Bazarr -──────────────────────────────────────────────
# Our subtitle manager, using gluetun's network stack.
# It is configured to download subtitles for both movies and TV shows.
# Make sure to add each directory under the volumes section.
# then add the same path in bazarr's settings under settings, add root folder.
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./bazarr:/config
      - /data:/data # Disk 1
      - /mnt/0ef20329-547e-44d6-83bc-722e172aa890/shows1:/shows1 # Disk 2
      - /mnt/0ef20329-547e-44d6-83bc-722e172aa890/movies1:/movies1 # Disk 2
    ports:
      - 6767:6767
    networks:
      servarrnetwork:
        ipv4_address: 172.39.0.6

# ─── Flaresolverr -──────────────────────────────────────────────
# This is used to bypass Cloudflare protections for some indexers in prowlarr
# Make sure to set the correct environment variables in the .env file
# It is configured to disable all connections if the VPN goes down.
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    restart: unless-stopped
    network_mode: service:gluetun
